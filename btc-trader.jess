(deftemplate cryptocurrency
  (slot name)
  (slot symbol))
(deftemplate cryptocurrencyTimeSeriesEntry
  (slot symbol)
  (slot timestep)
  (slot price))
(deftemplate cryptocurrencyCurrentMomentum
  (slot symbol)
  (slot slope))
(deftemplate currentPosition
  (slot symbol)
  (slot amount)
  (slot costbasis))
;(defrule calc-slope
 ; ...) 
;(defrule [or deffunc?] manageRisk param: riskPercentage
  ;;; using  10% riskPercentage
  ; if slope >= 10% buy more 
  ; if slope <= -10% exit position
  ; if -10% < slope < 10% hold position
  ; ... )
;(deffunc readTimeSeriesEntry
  ; ...
  ; )

; ==========

; Read in raw data
(import java.io.*)
(bind ?file nil)
(try
  (bind ?file
    (new BufferedReader
      (new java.io.FileReader "btc_price_data.csv")))
  (while (neq nil (bind ?line (?file readLine)))
    (bind ?strVal (new java.lang.String ?line))
    (bind ?firstComma (+ (call ?strVal indexOf ",") 1))
    (bind ?secondComma (+ (call ?strVal indexOf "," ?firstComma) 1))
    (bind ?openPrice (call ?strVal substring ?firstComma (- ?secondComma 1)))
    (bind ?closePrice (call ?strVal substring ?secondComma))
    ; (printout t ?openPrice crlf)
    ;(printout t ?closePrice crlf))
    (printout t "openPrice: " ?openPrice ", closePrice: " ?closePrice crlf))
    ; (printout t ?line crlf))
 catch
  (printout t "Error processing file" crlf)
 finally
  (if (neq nil ?file) then
      (?file close)))
